name: Build Web Server

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string

jobs:
  build-and-push:
    name: build-and-push
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production
      NEXT_PUBLIC_WEB_APP_URL: ${{ secrets.NEXT_PUBLIC_WEB_APP_URL }}
      NEXT_PUBLIC_API_V1_URL: ${{ secrets.NEXT_PUBLIC_API_V1_URL }}
    strategy:
      matrix:
        images:
          - enabled: true
            imageTagPrefix: ""
            repoRelPath: frontend
            protoRepoRelPath: proto
            appRelPath: apps/web
            dockerfile: .docker/Dockerfile.dev
            additionalFilesToWatch: ""
            readmeFile: .docker/DOCKER_README.md
        common:
          - containerName: web-server-nextjsgprc-projects-utkusarioglu-com
            containerUsername: 10021
            containerGroup: 10021
            cacheToDest: /tmp/.buildx-cache-new
            cacheFromSrc: /tmp/.buildx-cache
            tagFallbackString: tag-unavailable
            containerProjectRoot: /utkusarioglu-com/projects/nextjs-grpc

    steps:
      - name: Checkout ${{ matrix.images.repoRelPath }}
        uses: actions/checkout@v3
        with:
          repository: utkusarioglu/nextjs-grpc-frontend
          fetch-depth: 2
          path: ${{ matrix.images.repoRelPath }} 

      - name: Checkout proto
        uses: actions/checkout@v3
        with:
          repository: utkusarioglu/nextjs-grpc-proto
          fetch-depth: 2
          path: ${{ matrix.images.protoRepoRelPath }} 

      - name: Get changed files
        id: changed_files
        uses: tj-actions/changed-files@v25
        with:
          path: ${{ matrix.images.repoRelPath }} 
          files: |
            ${{ matrix.images.dockerfile }}
            ${{ matrix.images.readmeFile }}
            ${{ matrix.images.additionalFilesToWatch }}
            .github/workflows/build-web.yml
            ./apps/**/*
            ./packages/**/*

      - name: Declare run state
        id: run_state
        run: |
          echo "All modified files list:"
          echo "${{ steps.changed_files.outputs.all_modified_files }}"
          if [ ${{ github.ref_type }} == tag ] && \
             [ ${{ matrix.images.enabled }} == 'true' ] && \
            ( \
              [ ${{ steps.changed_files.outputs.any_modified }} == true ] || \
              [ ${{ github.event_name }} == workflow_dispatch ] \
            );
          then
            echo "run_docker_build=true" >> $GITHUB_OUTPUT
            echo "::debug::Docker build will carry out as expected."
          else
            echo "run_docker_build=false" >> $GITHUB_OUTPUT
            echo "Docker build is cancelled as the required conditions for a run haven't been met"
          fi

      - name: Create variables
        id: variables
        shell: bash
        run: |
          image_name="${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.common.containerName }}"
          repo_tag="${{ inputs.ref }}"
          image_tag="${repo_tag//\//-}"
          dev_image_tag="${image_tag}"
          image_ref="${image_name}:${image_tag}"
          dev_image_ref="${image_name}:${dev_image_tag}"
          short_image_ref="${{ matrix.common.containerName }}:${image_tag}"
          short_dev_image_ref="${{ matrix.common.containerName }}:${dev_image_tag}"

          for i in \
            image_name \
            image_tag \
            dev_image_tag \
            image_ref \
            dev_image_ref \
            short_image_ref \
            short_dev_image_ref; 
          do 
            echo "$i=${!i}" >> $GITHUB_OUTPUT; 
          done

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build ${{ steps.variables.outputs.short_image_ref }}
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: .
          tags: ${{ steps.variables.outputs.image_ref }}
          file: ${{ matrix.images.repoRelPath }}/${{ matrix.images.appRelPath }}/${{ matrix.images.dockerfile }} # ---
          push: true
          pull: false
          cache-from: type=local,src=${{ matrix.common.cacheFromSrc }}
          cache-to: type=local,mode=max,dest=${{ matrix.common.cacheToDest }}
          build-args: |
            IMAGE_TAG=${{ steps.variables.outputs.image_tag }}
            ROOT_PASS=${{ secrets.DOCKER_IMAGE_ROOT_PASS }}
            USERNAME=${{ matrix.common.containerUsername }}
            GROUP=${{ matrix.common.containerGroup }}
            PROJECT_ROOT_ABSPATH=${{ matrix.common.containerProjectRoot }}
            REPO_RELPATH=${{ matrix.images.repoRelPath }}
            PROTO_REPO_RELPATH=${{ matrix.images.protoRepoRelPath }}
            APP_RELPATH=${{ matrix.images.appRelPath }}
            NEXT_PUBLIC_WEB_APP_URL=${{ secrets.NEXT_PUBLIC_WEB_APP_URL }}
            NEXT_PUBLIC_API_V1_URL=${{ secrets.NEXT_PUBLIC_API_V1_URL }}

      - name: Set Docker Hub description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ steps.variables.outputs.image_name }}
          short-description: Api microservice containers for NextJS-Grpc
          readme-filepath: ${{ matrix.images.repoRelPath }}/${{ matrix.images.appRelPath }}/${{ matrix.images.readmeFile }}

      - name: Move cache
        run: |
          rm -rf ${{ matrix.common.cacheFromSrc }}
          if [ -d ${{ matrix.common.cacheFromSrc }} ];
          then
            mv ${{ matrix.common.cacheToDest }} ${{ matrix.common.cacheFromSrc }}
          fi
